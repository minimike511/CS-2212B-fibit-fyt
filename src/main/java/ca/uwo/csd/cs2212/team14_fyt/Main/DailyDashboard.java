package ca.uwo.csd.cs2212.team14_fyt.Main;

import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 * DailyDashboard.java
 * <p>
 * The Daily Dashboard class creates the backbone of the fyt program. Using
 * the Swing interface and created in the Netbeans IDE, Daily Dashboard displays
 * the panels/the overview of the data retrieved from Fitbit.
 *
 * @author fyt Team
 * @version 1.0
 */
public class DailyDashboard extends javax.swing.JFrame {

    private DailyModel daily;
    private HeartModel heart;
    private LifetimeModel lifeTime;
    private FoodModel foodLog;
    private WaterLogModel waterLog;
    private boolean checkTest;
    private Calendar date;
    private int active;
    
    private HeartDetail heartDetail;
    private FloorDetail floorDetail;
    private DistanceDetail distanceDetail;
    private StepDetail stepDetail;
    private CalorieDetail calorieDetail;
    private MinutesDetail minutesDetail;
    private TweetPanel tweetPanel;
    private FoodWaterDetail foodWater;
    private GoalSettings goalSettings;

    
    private SimpleDateFormat dateFormat;
    private String formatDate;

    /**
     * Constructor.
     * <p>
     * Creates new form DailyDashboard. Takes no parameters.
     */
    public DailyDashboard() {
        initData();
        initComponents();
    }

    /**
     * Constructor.
     * <p>
     * Creates new form testmode DailyDashboard. Takes no parameters.
     */
    public DailyDashboard(String test) {
        initTestData();
        initComponents();
    }

    private void initData() {
        if (date == null){
        date = Calendar.getInstance();
        }
        daily = new DataAccessDailySummary();
        heart = new DataAccessHeartRate();
        lifeTime = new DataAccessLifetime();
        foodLog = new DataAccessFoodLog();
        waterLog = new DataAccessWaterLog();
        daily.getDailyData(date);
        heart.getDailyData(date);
        lifeTime.getLifetimeData();
        foodLog.getFoodLog(date);
        waterLog.getWaterLog(date);
        checkTest = false;
        
    }
    
    private void initTestData() {
        if (date == null){
        date = Calendar.getInstance();
        }
        daily = new TestDataDaily();
        heart = new TestHeartRate();
        lifeTime = new TestLifeTime();
        foodLog = new TestFoodLog();
        waterLog = new TestWaterLog();
        checkTest = true;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Color[] theme = Configuration.getTheme();
        if (theme == null){
            theme = new Color[2];
            theme[0] = Color.GRAY;
            theme[1] = Color.GRAY;
        }
        Configuration config;
        try{config = Configuration.load();}
        catch (Exception e){config = new Configuration();}
        mainPanel = new ca.uwo.csd.cs2212.team14_fyt.Main.Panel();
        headerPanel = new javax.swing.JPanel();
        fytIcon = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tilePanel = new javax.swing.JPanel();
        stepTile = new javax.swing.JPanel();
        stepLabel = new javax.swing.JLabel();
        stepDetailButton = new javax.swing.JButton();
        calorieTile = new javax.swing.JPanel();
        calorieDetailButton = new javax.swing.JButton();
        caloriesLabel = new javax.swing.JLabel();
        distanceTile = new javax.swing.JPanel();
        distanceDetailButton = new javax.swing.JButton();
        distanceLabel = new javax.swing.JLabel();
        minutesTile = new javax.swing.JPanel();
        minutesLabel = new javax.swing.JLabel();
        minutesDetailButton = new javax.swing.JButton();
        floorsTile = new javax.swing.JPanel();
        floorsLabel = new javax.swing.JLabel();
        floorDetailButton = new javax.swing.JButton();
        heartZoneTile = new javax.swing.JPanel();
        heartLabel = new javax.swing.JLabel();
        heartDetailButton = new javax.swing.JButton();
        goalTile = new javax.swing.JPanel();
        goalSettingButton = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        int progress = (int)(((double)daily.getSummarySteps()/daily.getGoalsSteps())*100);
        jProgressBar1.setValue(progress);
        jProgressBar2 = new javax.swing.JProgressBar();
        int progress1 = (int)(((double)daily.getSummaryTotalDistance()/daily.getGoalsDistance())*100);
        jProgressBar2.setValue(progress1);
        jProgressBar3 = new javax.swing.JProgressBar();
        int progress2 = (int)(((double)daily.getSummaryFloors()/daily.getGoalsFloors())*100);
        jProgressBar3.setValue(progress2);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        manualTile = new javax.swing.JPanel();
        heartLabel2 = new javax.swing.JLabel();
        FoodWater = new javax.swing.JButton();
        footerTile = new javax.swing.JPanel();
        exitButton = new javax.swing.JButton();
        settingsButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        calendar = new javax.swing.JTextField();
        tweetButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("fyt - Daily Dashboard");
        setMinimumSize(new java.awt.Dimension(600, 0));
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        mainPanel.setBackground(theme[0]);

        headerPanel.setOpaque(false);

        fytIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fytIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fyt_logo.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Welcome Beth");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fytIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fytIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tilePanel.setOpaque(false);

        stepTile.setBackground(theme[1]);
        stepTile.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        stepTile.setPreferredSize(new java.awt.Dimension(335, 115));

        stepLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        stepLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stepLabel.setText("Steps: " + Integer.toString(daily.getSummarySteps()));

        stepDetailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/steps_off.png"))); // NOI18N
        stepDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepDetailButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout stepTileLayout = new javax.swing.GroupLayout(stepTile);
        stepTile.setLayout(stepTileLayout);
        stepTileLayout.setHorizontalGroup(
            stepTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stepTileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stepLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stepDetailButton)
                .addContainerGap())
        );
        stepTileLayout.setVerticalGroup(
            stepTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stepTileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(stepTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(stepLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stepDetailButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                .addContainerGap())
        );

        calorieTile.setBackground(theme[1]);
        calorieTile.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        calorieTile.setPreferredSize(new java.awt.Dimension(335, 115));

        calorieDetailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calsburned_off.png"))); // NOI18N
        calorieDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calorieDetailButtonActionPerformed(evt);
            }
        });

        caloriesLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        caloriesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        caloriesLabel.setText("Calories: " + Integer.toString(daily.getSummaryActivityCalories()));

        javax.swing.GroupLayout calorieTileLayout = new javax.swing.GroupLayout(calorieTile);
        calorieTile.setLayout(calorieTileLayout);
        calorieTileLayout.setHorizontalGroup(
            calorieTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(calorieTileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(caloriesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calorieDetailButton)
                .addContainerGap())
        );
        calorieTileLayout.setVerticalGroup(
            calorieTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, calorieTileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(calorieTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(calorieDetailButton, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(caloriesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        distanceTile.setBackground(theme[1]);
        distanceTile.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        distanceTile.setPreferredSize(new java.awt.Dimension(335, 115));

        distanceDetailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/distance_off.png"))); // NOI18N
        distanceDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distanceDetailButtonActionPerformed(evt);
            }
        });

        distanceLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        distanceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        distanceLabel.setText("Distance Walked: " +Double.toString(daily.getSummaryTotalDistance()));

        javax.swing.GroupLayout distanceTileLayout = new javax.swing.GroupLayout(distanceTile);
        distanceTile.setLayout(distanceTileLayout);
        distanceTileLayout.setHorizontalGroup(
            distanceTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(distanceTileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(distanceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(distanceDetailButton)
                .addContainerGap())
        );
        distanceTileLayout.setVerticalGroup(
            distanceTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, distanceTileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(distanceTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(distanceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(distanceDetailButton, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                .addContainerGap())
        );

        minutesTile.setBackground(theme[1]);
        minutesTile.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        minutesTile.setPreferredSize(new java.awt.Dimension(335, 115));

        minutesLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        minutesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        active = daily.getSummaryVeryActiveMinutes() + daily.getSummaryLightlyActiveMinutes() + daily.getSummaryFairlyActiveMinutes();
        minutesLabel.setText("<html>Sedentary Minutes: " + Integer.toString(daily.getSummarySedentaryMinutes()) + "<br> Active Minutes: " + Integer.toString(active) + "</html>");

        minutesDetailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/activemins_off.png"))); // NOI18N
        minutesDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minutesDetailButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout minutesTileLayout = new javax.swing.GroupLayout(minutesTile);
        minutesTile.setLayout(minutesTileLayout);
        minutesTileLayout.setHorizontalGroup(
            minutesTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(minutesTileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(minutesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minutesDetailButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        minutesTileLayout.setVerticalGroup(
            minutesTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(minutesTileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(minutesTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minutesDetailButton, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(minutesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        floorsTile.setBackground(theme[1]);
        floorsTile.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        floorsTile.setPreferredSize(new java.awt.Dimension(335, 115));

        floorsLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        floorsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        floorsLabel.setText("Floors Climbed: " + Integer.toString(daily.getSummaryFloors()));

        floorDetailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/floors_off.png"))); // NOI18N
        floorDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                floorDetailButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout floorsTileLayout = new javax.swing.GroupLayout(floorsTile);
        floorsTile.setLayout(floorsTileLayout);
        floorsTileLayout.setHorizontalGroup(
            floorsTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(floorsTileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(floorsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(floorDetailButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        floorsTileLayout.setVerticalGroup(
            floorsTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(floorsTileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(floorsTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(floorDetailButton)
                    .addComponent(floorsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        heartZoneTile.setBackground(theme[1]);
        heartZoneTile.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        heartZoneTile.setPreferredSize(new java.awt.Dimension(335, 115));

        heartLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        heartLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heartLabel.setText("<html>Resting Heart Rate: " + Integer.toString(heart.getRest()) +"</html>");

        heartDetailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/heartrate_off.png"))); // NOI18N
        heartDetailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartDetailButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout heartZoneTileLayout = new javax.swing.GroupLayout(heartZoneTile);
        heartZoneTile.setLayout(heartZoneTileLayout);
        heartZoneTileLayout.setHorizontalGroup(
            heartZoneTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(heartZoneTileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(heartLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(heartDetailButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        heartZoneTileLayout.setVerticalGroup(
            heartZoneTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(heartZoneTileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(heartZoneTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(heartDetailButton, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(heartLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        goalTile.setBackground(theme[1]);
        goalTile.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        goalTile.setPreferredSize(new java.awt.Dimension(335, 115));

        goalSettingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goals_off.png"))); // NOI18N
        goalSettingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goalSettingButtonActionPerformed(evt);
            }
        });

        jProgressBar1.setStringPainted(true);

        jProgressBar2.setStringPainted(true);

        jProgressBar3.setStringPainted(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Steps");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Distance");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Floors");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Goals");

        javax.swing.GroupLayout goalTileLayout = new javax.swing.GroupLayout(goalTile);
        goalTile.setLayout(goalTileLayout);
        goalTileLayout.setHorizontalGroup(
            goalTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(goalTileLayout.createSequentialGroup()
                .addGroup(goalTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(goalTileLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(goalTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(goalTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(jProgressBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, goalTileLayout.createSequentialGroup()
                        .addContainerGap(119, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(53, 53, 53)))
                .addComponent(goalSettingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        goalTileLayout.setVerticalGroup(
            goalTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(goalTileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(goalTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(goalTileLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(goalTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(goalTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(goalTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jProgressBar3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(goalSettingButton, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                .addGap(5, 5, 5))
        );

        manualTile.setBackground(theme[1]);
        manualTile.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        manualTile.setPreferredSize(new java.awt.Dimension(335, 115));
        manualTile.setRequestFocusEnabled(false);
        manualTile.setVerifyInputWhenFocusTarget(false);

        heartLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        heartLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        heartLabel2.setText("<html>Food Logs: " + Integer.toString(foodLog.getLogAmount().length) + "<br>Water Logs: " + Integer.toString(waterLog.getWaterLog().length) +"</html>");

        FoodWater.setIcon(new javax.swing.ImageIcon(getClass().getResource("/water_off.png"))); // NOI18N
        FoodWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FoodWaterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout manualTileLayout = new javax.swing.GroupLayout(manualTile);
        manualTile.setLayout(manualTileLayout);
        manualTileLayout.setHorizontalGroup(
            manualTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manualTileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(heartLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FoodWater, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        manualTileLayout.setVerticalGroup(
            manualTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manualTileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(manualTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FoodWater, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(heartLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout tilePanelLayout = new javax.swing.GroupLayout(tilePanel);
        tilePanel.setLayout(tilePanelLayout);
        tilePanelLayout.setHorizontalGroup(
            tilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tilePanelLayout.createSequentialGroup()
                .addGroup(tilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(calorieTile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(distanceTile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manualTile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stepTile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(tilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minutesTile, javax.swing.GroupLayout.Alignment.TRAILING, 333, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(floorsTile, javax.swing.GroupLayout.Alignment.TRAILING, 333, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heartZoneTile, javax.swing.GroupLayout.Alignment.TRAILING, 333, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(goalTile, javax.swing.GroupLayout.Alignment.TRAILING, 333, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        tilePanelLayout.setVerticalGroup(
            tilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minutesTile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stepTile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(tilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(floorsTile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calorieTile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(heartZoneTile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(distanceTile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(manualTile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(goalTile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        stepTile.setVisible(config.getVisible(0));
        calorieTile.setVisible(config.getVisible(1));
        distanceTile.setVisible(config.getVisible(2));
        minutesTile.setVisible(config.getVisible(3));
        floorsTile.setVisible(config.getVisible(4));
        heartZoneTile.setVisible(config.getVisible(5));
        goalTile.setVisible(config.getVisible(7));
        manualTile.setVisible(config.getVisible(6));

        footerTile.setBackground(theme[1]);
        footerTile.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        exitButton.setText("Logout");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        settingsButton.setText("Settings");
        settingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update Fitbit Data");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        formatDate = dateFormat.format(date.getTime());
        jLabel8.setText("Last Updated: " + formatDate);

        calendar.setText(formatDate);

        tweetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tweet.png"))); // NOI18N
        tweetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tweetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout footerTileLayout = new javax.swing.GroupLayout(footerTile);
        footerTile.setLayout(footerTileLayout);
        footerTileLayout.setHorizontalGroup(
            footerTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, footerTileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(settingsButton)
                .addGap(18, 18, 18)
                .addComponent(updateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tweetButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exitButton)
                .addContainerGap())
        );
        footerTileLayout.setVerticalGroup(
            footerTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(footerTileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(footerTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(footerTileLayout.createSequentialGroup()
                        .addGroup(footerTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(settingsButton)
                            .addComponent(updateButton)
                            .addComponent(jLabel8)
                            .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, footerTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tweetButton)
                        .addComponent(exitButton)))
                .addContainerGap())
        );

        jLabel6.setText("Designed to interact with FITBIT�� data");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(footerTile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tilePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tilePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(footerTile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        /*try{    ObjectOutputStream out = new ObjectOutputStream(
            new FileOutputStream("src/main/resources/dailyAPI",false));
        out.writeObject(daily);
        out = new ObjectOutputStream(
            new FileOutputStream("src/main/resources/heartAPI",false));
        out.writeObject(heart);}
    catch(Exception ex){}*/

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        if (checkTest == false) {
            Calendar today = Calendar.getInstance();
            Calendar minDay = Calendar.getInstance();
            minDay.add(Calendar.MONTH, -6);
            try{
            date.setTime(dateFormat.parse(calendar.getText()));
            if(today.compareTo(date) >= 0 && minDay.compareTo(date) <=0){
                initData();
                refresh();
            }else{
                throw new NullPointerException();
            }
            }catch(java.text.ParseException e){
                JOptionPane.showMessageDialog(null, "Invalid date format! Please follow this format (yyyy-MM-dd),","fyt - ERROR",JOptionPane.INFORMATION_MESSAGE);
            }catch(NullPointerException e){
                JOptionPane.showMessageDialog(null, "Invalid date! try earlier date,","fyt - ERROR",JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Not Available in Test Mode","fyt - ERROR",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void settingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButtonActionPerformed
        Settings.main(null);
    }//GEN-LAST:event_settingsButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void heartDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartDetailButtonActionPerformed
        heartDetail = new HeartDetail(heart);
        heartDetail.main();
    }//GEN-LAST:event_heartDetailButtonActionPerformed

    private void distanceDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distanceDetailButtonActionPerformed
        distanceDetail = new DistanceDetail(daily,lifeTime);
        distanceDetail.main();
    }//GEN-LAST:event_distanceDetailButtonActionPerformed

    private void stepDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepDetailButtonActionPerformed
        stepDetail = new StepDetail(daily, lifeTime);
        stepDetail.main();
    }//GEN-LAST:event_stepDetailButtonActionPerformed

    private void minutesDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minutesDetailButtonActionPerformed
        minutesDetail = new MinutesDetail(daily);
        minutesDetail.main();
    }//GEN-LAST:event_minutesDetailButtonActionPerformed
    
    private void calorieDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calorieDetailButtonActionPerformed
       calorieDetail = new CalorieDetail(daily);
       calorieDetail.main();
    }//GEN-LAST:event_calorieDetailButtonActionPerformed

    private void floorDetailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_floorDetailButtonActionPerformed
        floorDetail = new FloorDetail (daily, lifeTime);
        floorDetail.main();
    }//GEN-LAST:event_floorDetailButtonActionPerformed

    private void tweetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tweetButtonActionPerformed
        if(checkTest == false){
            tweetPanel = new TweetPanel();
            tweetPanel.main();
        }else{
            JOptionPane.showMessageDialog(null, "Not Available in Test Mode","fyt - ERROR",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_tweetButtonActionPerformed

    private void goalSettingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goalSettingButtonActionPerformed
        goalSettings = new GoalSettings(daily, lifeTime);
        goalSettings.main();
    }//GEN-LAST:event_goalSettingButtonActionPerformed

    private void FoodWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FoodWaterActionPerformed
        foodWater = new FoodWaterDetail(foodLog, waterLog);
        foodWater.main();
    }//GEN-LAST:event_FoodWaterActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        rebuild();
    }//GEN-LAST:event_formWindowGainedFocus

    
    public void rebuild() {
        Configuration config;
        try {
            config = Configuration.load();

            Color[] theme = Configuration.getTheme();
            if (theme == null) {
                theme = new Color[2];
                theme[0] = Color.GRAY;
                theme[1] = Color.GRAY;
            }
            mainPanel.setBackground(theme[0]);
            stepTile.setBackground(theme[1]);
            stepTile.setVisible(config.getVisible(0));
            minutesTile.setBackground(theme[1]);
            minutesTile.setVisible(config.getVisible(3));
            calorieTile.setBackground(theme[1]);
            calorieTile.setVisible(config.getVisible(1));
            floorsTile.setBackground(theme[1]);
            floorsTile.setVisible(config.getVisible(4));
            distanceTile.setBackground(theme[1]);
            distanceTile.setVisible(config.getVisible(2));
            heartZoneTile.setBackground(theme[1]);
            heartZoneTile.setVisible(config.getVisible(5));
            footerTile.setBackground(theme[1]);
            manualTile.setBackground(theme[1]);
            manualTile.setVisible(config.getVisible(6));
            goalTile.setBackground(theme[1]);
            goalTile.setVisible(config.getVisible(7));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DailyDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DailyDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DailyDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DailyDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        if (args.length > 0 && args[0].equals("test")) {
        /* Create and testmode display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new DailyDashboard("test").setVisible(true);
                }
            });
        } else {
        /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new DailyDashboard().setVisible(true);
                }
            });
        }

    } // end of main
    private void refresh(){
        stepLabel.setText("Steps: " + Integer.toString(daily.getSummarySteps()));
        distanceLabel.setText("Distance Walked: " +Double.toString(daily.getSummaryTotalDistance()));
        caloriesLabel.setText("Calories: " + Integer.toString(daily.getSummaryActivityCalories()));
        active = daily.getSummaryVeryActiveMinutes() + daily.getSummaryLightlyActiveMinutes() + daily.getSummaryFairlyActiveMinutes();
        minutesLabel.setText("<html>Sedentary Minutes: " + Integer.toString(daily.getSummarySedentaryMinutes()) + "<br> Active Minutes: " + Integer.toString(active) + "</html>");
        floorsLabel.setText("Floors Climbed: " + Integer.toString(daily.getSummaryFloors()));
        heartLabel.setText("<html>Resting Heart Rate: " + Integer.toString(heart.getRest()) +"</html>");
        formatDate = dateFormat.format(date.getTime());
        jLabel8.setText("Last Updated: " + formatDate);
        heartLabel2.setText("<html>Food Logs: " + Integer.toString(foodLog.getLogAmount().length) + "<br>Water Logs: " + Integer.toString(waterLog.getWaterLog().length) +"</html>");
        int progress = (int)(((double)daily.getSummarySteps()/daily.getGoalsSteps())*100);
        jProgressBar1.setValue(progress);
        jProgressBar1.setStringPainted(true);
        int progress1 = (int)(((double)daily.getSummaryTotalDistance()/daily.getGoalsDistance())*100);
        jProgressBar2.setValue(progress1);
        jProgressBar2.setStringPainted(true);
        int progress2 = (int)(((double)daily.getSummaryFloors()/daily.getGoalsFloors())*100);
        jProgressBar3.setValue(progress2);
        jProgressBar3.setStringPainted(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FoodWater;
    private javax.swing.JTextField calendar;
    private javax.swing.JButton calorieDetailButton;
    private javax.swing.JPanel calorieTile;
    private javax.swing.JLabel caloriesLabel;
    private javax.swing.JButton distanceDetailButton;
    private javax.swing.JLabel distanceLabel;
    private javax.swing.JPanel distanceTile;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton floorDetailButton;
    private javax.swing.JLabel floorsLabel;
    private javax.swing.JPanel floorsTile;
    private javax.swing.JPanel footerTile;
    private javax.swing.JLabel fytIcon;
    private javax.swing.JButton goalSettingButton;
    private javax.swing.JPanel goalTile;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JButton heartDetailButton;
    private javax.swing.JLabel heartLabel;
    private javax.swing.JLabel heartLabel2;
    private javax.swing.JPanel heartZoneTile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JProgressBar jProgressBar3;
    private ca.uwo.csd.cs2212.team14_fyt.Main.Panel mainPanel;
    private javax.swing.JPanel manualTile;
    private javax.swing.JButton minutesDetailButton;
    private javax.swing.JLabel minutesLabel;
    private javax.swing.JPanel minutesTile;
    private javax.swing.JButton settingsButton;
    private javax.swing.JButton stepDetailButton;
    private javax.swing.JLabel stepLabel;
    private javax.swing.JPanel stepTile;
    private javax.swing.JPanel tilePanel;
    private javax.swing.JButton tweetButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
